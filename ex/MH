#!/usr/bin/env python3

# ========== IMPORTS ==========
import os

# ========== DICTIONARIES / LISTS ===============
rooms = {
  'porch'        :{
                    'desc'       : 'MONTY HALL PORCH:\n  Your driver pulls up to the curb and you get out. Drizzling rain hastens you up the steps to Monty Hall.\n  Renovated in the last three months, the old estate was awash with lights and pouring with music.\n  Costumed up for the bootleg era, you are eager to join your co-workers in the interactive mystery murder theater.',
                    'go'         : ['move', 'reception', 'GO to the reception'],
                    'return'     : ['move', 'curb', 'RETURN to the curb'],
                    'check'      : ['act', 'CHECK your invitation', 'Hmmm. Surely it was here? Did I leave it on the seat?'],
                  },
   'curb'         :{
                    'desc'       : 'CURBSIDE:\n  Your ride already left. Nothing at the curb except deep puddles, lamps, and trees swaying in the wind.',
                    'return'     : ['move', 'lobby', 'RETURN to Monty Hall'],
                    'call'       : ['act', 'CALL an uber and go home', 'Then again, maybe not. You came here to enjoy yourself. Might as well do it.'],
                    'jump'       : ['act', 'JUMP in the puddles', 'Splash, splash, splash!'],
                    'wet paper'  : ['item', 'wet paper', 'Dripping, but readable:\nHi. George and I are attending the opening night for the Monty Hall dinner/mystery theater on 4 May. I bet you already heard about the place, but do not forget to dress the part. We will be swinging the old-timesy fashion at 7pm./n /n Your seat is paid, so if you are late .../n I will kill you. LOL!/n /n  - Mirri'],
                  },
  'reception'    :{
                    'desc'       : 'RECEPTION:\n  You take off your fedora and clack into the polished halls of an impressive foyer overlooked by a deep gallery and steeped in jazz.\n  The wait staff perks up from behind a reception counter and gestures to you.\n "Hurry to the lounge on your left. Your party\'s mystery is about to kick off."',
                    'turn'       : ['move', 'lounge', 'TURN into the lounge'],
                    'wander'     : ['move', 'gallery', 'WANDER up the gallery'],
                    'mirri'      : ['act', '"Did MIRRI check in yet"','"Yes. She is ahead in the lounge. She got you the deluxe role tonight," the receptionist answered'],
                    'return'     : ['act', 'RETURN to the curb', 'Alas! You can see your ride already disappearing down the driveway.'],
                    'call'       : ['act', 'CALL your friends', 'Better luck shouting ... or just go into the lounge.'],
                    'check'      : ['act', 'CHECK your invitation', 'Hmm, where is it. Oh well, better just get moving.'],                 
                  },
  'gallery'         :{
                    'desc'       : 'GALLERY:\n  Taking your own time, you opt for a view from the gallery. The walls are littered with insets of period art,\n  memorabilia, and summaries of historical significance. Leaning over the railings, you imagine yourself as the host,\n  like a wealthy Jay Gatsby and patron of endless parties. As you stare into the scintillating chandelier,\n  the lights dash leaving you blind with a rainbowed afterimage. The music stopped and all is silent.',
                    'search'     : ['move', 'lobby', 'Carefully SEARCH your way downstairs'],
                    'wait'       : ['act', 'WAIT a moment', 'The false colors fade, but no time restores the lights. Only a small candle flickers from down below.', 'remove'],
                    'call'       : ['act', 'CALL out to the staff', 'No response. Perhaps the staff are in the lounge or backrooms.' ],
                  },
  'lounge'       :{
                    'desc'       : 'LOUNGE:\n    You enter the lounge. It is art deco at its highest. The deep room hosted small army of chairs and hors d\'oeuvres.\n  No speakeasy would be complete without a bar, and there it is, a long counter highlighted by a cascade of  bottles.\n  Nothing stood out so much as the period ash tray with the sign "No Smoking." Anachronisms aside, you scour the room\n  for your party.\n    There is Mirri on the chaise. She went all out sporting a giant red hat topped with a back-dyed plume.\n  George must be her "date" tonight, but it seems he has already started to mingle./n    Before you reach Mirri she squeals,\n  "Snake! I\'m bit," and melts lifeless into her seat. Everyone stares and you see the snake slither off the chaise and\n  under an armoire.  George rushes close to her and exclaimed, "She\'s not breathing! Poison! Is there a doctor in the house?"\n  Staff interjected, "Keep away, move into the ballroom." as they shuffled the "panicked/laughing" patrons out\n  of the room and through the ballroom doors. He could have acted a little better, but now you wonder if you were also\n  meant to have a role in the night\'s plot.',
                    'wait'       : ['move', 'empty lounge', 'WAIT'],
                    'approach'   : ['act', 'APPROACH Mirri and George', '"Wait for the crowd, don\'t spoil it," George whispers.'],
                    'look'       : ['act', 'LOOK for the snake', 'The crevice is too dark, and you certainly aren\'t putting a hand down there.'],
                    'follow'     : ['act', 'FOLLOW the crowd', 'As you move to the ballroom, a waiter stops you, "Wait a moment and see your friends."'],
                    'return'     : ['act', 'RETURN to the foyer', 'You try the doors. Locked... they won\t budge.'],                  
                  },
  'lounge_2'     :{
                    'desc'       : 'LOUNGE:\n The room quickly empties leaving you, Mirri, and George. A lone waitstaff was busy wrangling out the snake.\n  "Finally, our fellow murderer is here," exclaimed Mirri.',
                    'follow'     : ['move', 'balcony', 'FOLLOW Mirri'],
                    'stay'       : ['move', 'lounge_empty', 'STAY behind'],
                    'snake'      : ['act', '"That SNAKE was real."', '"It\'s called acting darling.," Mirri teased, "No bite, ... just a tame python."', 'remove'],
                    'late'       : ['act', '"Sorry I am late,"', 'Not late. You were supposed to show up later than the rest of us." Mirri replied.', 'remove'],
                    'murderer'   : ['act', '"How am I the MURDERER"', 'George grinned. "Because you get to be the mysterious Monty Hall! and we are your assistants! The place is named after him, and the three of us get to reenact his deeds"', 'remove'],
                    'next'       : ['act', '"What happens NEXT."', '"Ask later, come on." Mirri beckoned.', 'remove'],
                  },
  'lounge_empty' :{
                    'desc'       : 'LOUNGE:\n "How disappointing," you say, "I came to do some sleuthing, and I will do just that."/n /n  Okay then. But we have to leave to help the show. The foyer should be unlocked now. Enjoy the snakes, ... I mean snacks," Mirri replied.\n \n  Mirri, George, and the staff exit out a side door. Nothing but you and a room full of alcohol.',
                    'return'     : ['move', 'foyer', 'RETURN to the foyer'],
                    'follow'     : ['act', 'FOLLOW Mirri', 'The side door is locked. I guess there is no second chance to jump on the bandwagon.'],
                    'enter'      : ['act', 'ENTER the ballroom', 'Locked.', 'remove'],
                    'bang'       : ['act', 'BANG on ballroom door', 'No response. What is going on in there?'],
                  },
  'balcony'      :{
                    'desc'       : 'BALLROOM BALCONY:\n The pathway leads upstairs ending at a wide balcony far above the ballroom. You can hear a cacophony of murmering and laughter down below.\n  "This is where the action happens," explains Mirri, "This isn\'t just a mystery theater, it is an escape room."  The staff will play out recordings\n  to manipulate our partiers while we choose how the house deals out its cards from behind the scenes.\n  Watch and I will guide you through it.',
                    'observe'    : ['act', 'OBSERVE the scene below', 'That\'s all folks. Tune in again for Part 2'],
                    'close'      : ['act', 'CLOSE your eyes', 'You can\'t help but peek'],
                  },                 
  'lobby'        :{
                    'desc'       : 'LOBBY:\n What happened to the lights and music? The entrance is lit only a by sputtering candle. The darkness closes in.',
                    'search'     : ['move', 'lobby_dark','SEARCH the hall'],
                    'go'         : ['move', 'outside', 'GO outside'],
                    'close'      : ['move', 'lobby dark', 'CLOSE the door'],
                    'candle'     : ['item', 'candle', 'Mmmm! Pumpkin spice.'],
                    #'burn'      : ['use', 'invitation', 'BURN your invitation'The paper curls, chars, and crumbles to dust.'],
                  },
  'outside'      :{
                    'desc'       : 'OUTSIDE:\n The rain isn\'t letting up and your suit isn\'t getting any drier. Nothing to see but the long private drive shimmering\n with the reflection of a row of lamps.',
                    'return'     : ['move', 'darkness', 'RETURN to Monty Hall'],
                    'call'       : ['act', 'CALL an uber', 'No reception. Monty Hall is just too far from civilization. Guess that helped the establishment and patrons avoid the law in the 1920s.'],
                    'walk'       : ['act', 'WALK home', 'Then again, maybe not. It was a 30-minute drive.'],
                  },
  'lobby_dark'   :{
                    'desc'       : 'DARKNESS:\n A gust from the entrance blows out the candle by the entrance. You are plunged into total darkness.',
                    'delve'      : ['move', 'darkness', 'DELVE further into the darkness'],
                    'turn'       : ['move', 'outside', 'TURN for the exit'],
                  },
  'darkness'     :{
                    'desc'       : 'So dark ... All is the void.',
                    'delve'      : ['move', 'backrooms', 'DELVE deeper. Maybe you will find a door.'],
                    'wait'       : ['act', 'WAIT and listen', 'Did you hear that? Did it hear you?'],
                  },
  'backrooms'    :{
                    'desc'       : 'BACKROOMS:\n Fumbling into the backrooms and up a flight of stairs, you bump into something in the darkness. Something feathery, overdressed, and with a bony elbow.\n \n "Ouch. Who bumped me?" It whispered.\n \n  Recognizing the voice you question, "Mirri?"\n \n  "Glad you decided to show, but you, George, and I need to hurry to the balcony. I will fill you in as we go along."',
                    'follow'     : ['move', 'balcony', 'FOLLOW Mirri'],
                    'turn'       : ['act', 'TURN around', 'Mirri pulls your arm. "Nope. You are going this way."'],
                  }
        }
inventory =       {  
                    'cell phone' : ['item', 'cell phone', 'Powered, but only one bar here. Maybe I should climb a tree.'],
                    'lint'       : ['item', 'lint', 'Fluff. Always to be found when you need it.'],
                    'wallet'     : ['item', 'wallet', 'Cards ... check.\n Cash ... check.\n Breath mints ... darn.'],
                  }

item_desc =       {
                    'lint'       : 'Fluff. Always to be found when you need it.',
                    'wet paper'  : 'Dripping, but readable:\nHi. George and I are attending the opening night for the Monty Hall dinner/mystery theater on 4 May. I bet you already heard about the place, but do not forget to dress the part. We will be swinging the old-timesy fashion at 7pm./n /n Your seat is paid, so if you are late .../n I will kill you. LOL!/n /n  - Mirri',
                    'candle'     : 'Mmmm! Pumpkin spice.',
                  }
remove_acts =     {
                    'invite'      : 'invite',
                  }
destroy_items =   {
                    'wet paper'   : 'wet paper',
                    'candle'      : 'candle',
                  }
# ========== INITIAL STATE ===============
current_room = 'porch'

# ========== STATUS SCREEN ==========
def status():
  os.system("clear")
  print('''
=======================================================================================================================
                                     ╔╦╗╔═╗╔╗╔╔╦╗╦ ╦  ╦ ╦╔═╗╦  ╦    ╔╦╗╦ ╦╦═╗╔╦╗╔═╗╦═╗
                                     ║║║║ ║║║║ ║ ╚╦╝  ╠═╣╠═╣║  ║    ║║║║ ║╠╦╝ ║║║╣ ╠╦╝
                                     ╩ ╩╚═╝╝╚╝ ╩  ╩   ╩ ╩╩ ╩╩═╝╩═╝  ╩ ╩╚═╝╩╚══╩╝╚═╝╩╚═
=======================================================================================================================''')
  print()
  print(rooms[current_room]['desc'], "\n")
  print('=======================================================================================================================')

  print(f"INVENTORY:  ", end="")
  for inv_elements in inventory.keys():
    print(f"{inv_elements.upper()}, ", end="")

  print("\nACTIONS:")
  for act_elements in rooms[current_room]:
    if rooms[current_room][act_elements][0] == "act":
      print(f" - {rooms[current_room][act_elements][1]}")
    if rooms[current_room][act_elements][0] == "move":
      print(f" - {rooms[current_room][act_elements][2]}")

  print(f"ITEMS:  ", end="")
  for elements in rooms[current_room]:
    if elements in rooms[current_room] and elements in item_desc:
      print(f"{elements.upper()},  ", end="")
  print()

  print('======================================================================================================================')
  print('======================================   Type a KEYWORD to make your actions.   ======================================', '\n')

# ========== GAME LOOP ===============
while True:
  status()

  choice = ''
  while choice == '':
    choice = input('> ',)
    choice = choice.lower()

    if choice == 'teleport':
      print("AVAILABLE ROOMS: ")
      for room_names in rooms.keys():
        print(f"{room_names}  ", end="")
      q_teleport = input("\n\n, Teleport to which room? \n> ")
      if q_teleport in rooms.keys():
        current_room = q_teleport
      else:
        choice = ''
        continue         
      break
    else:
      choice = ''
      continue

    if choice in rooms[current_room] and rooms[current_room][choice][0] == "item":         # ADD TO INVENTORY, REMOVE FROM ROOM
        inventory[choice] = ['item', rooms[current_room][choice][1], rooms[current_room][choice][0]]
        del rooms[current_room][choice]
        input(f"Added {choice.upper()} to inventory. Press enter to continue. \n")
        break

#    if choice in rooms[current_room] and choice in item_desc:         # ADD TO INVENTORY, REMOVE FROM ROOM
#        inventory[choice] = choice
#        del rooms[current_room][choice]
#        input(f"Added {choice.upper()} to inventory. Press enter to continue. \n")
#        break

    elif choice in inventory:                 # CHECK ITEM DESCRIPTION, DROP INTO ROOM
        print(f"{inventory[choice][2]}  \n")
        q_drop = input("Drop item? (Y/N) \n> ")
        if q_drop == "Y" or q_drop == "y":
          rooms[current_room][choice] = inventory[choice]          
          inventory.pop(choice)
          input(f"Dropped {choice.upper()}. Press enter to continue. \n")
        else:
          choice = ''
          continue
        break

#    elif choice in inventory and choice in item_desc:                 # CHECK ITEM DESCRIPTION, DROP INTO ROOM
#        print(f"{item_desc[choice]}  \n")
#        q_drop = input("Drop item? (Y/N) \n> ")
#        if q_drop == "Y" or q_drop == "y":
#          inventory.pop(choice)
#          rooms[current_room][choice] = choice
#          input(f"Dropped {choice.upper()}. Press enter to continue. \n")
#        else:
#          choice = ''
#          continue
#        break

    elif choice in rooms[current_room] and rooms[current_room][choice][0] == "move":
        current_room = rooms[current_room][choice][1]
        break

    elif choice in rooms[current_room] and rooms[current_room][choice][0] == "act":
        print(f"{rooms[current_room][choice][2]} \n")
        if "remove" not in rooms[current_room][choice]:
          choice = ''
          continue
        else:
          rooms[current_room].pop(choice)
          input("Press enter to continue.\n")
          choice = ''
          break

    else:
      print("Action not available.")
      choice = ''
      continue

  else: continue

